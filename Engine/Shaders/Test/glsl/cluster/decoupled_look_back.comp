#version 450
#define BLOCK_SIZE 1024
#extension GL_KHR_shader_subgroup: require

layout (local_size_x = BLOCK_SIZE) in;

layout(set = 0, binding = 0, std430) buffer InputData
{
    uint key;
    uint value;
} inputs[];

// ┌──────────────┬──────────────────┐
// ├──┤ 2 bits ├──┼───┤ 30 bits ├────┤
// │  status flag | aggreagate value │
// ├──────────────┴──────────────────┤
// ├───────────┤ 32 bits ├───────────┤
// │        inclusive prefix         │
// └─────────────────────────────────┘
layout(set = 0, binding = 2, std430) buffer StatusDescriptor
{
    uint aggregate;
    uint inclusivePrefix;
} statusDesc[];

shared uint sharedData;

void main()
{
    uint gid = gl_GlobalInvocationID.x;
    uint wgid = gl_WorkGroupID.x;
    uint lid = gl_LocalInvocationID.x;

    if(lid==0)
    {
        statusDesc[wgid].aggregate = 0;
        statusDesc[wgid].inclusivePrefix = 0;
    }

    glMemoryBarrier();

    // reduce

    // scan
}