#version 450

layout(push_constant) uniform constants {
    vec2 imageSize;
} PushConstants;

layout ( binding = 0 ) uniform sampler2D inputImage;
layout ( binding = 1, r32f ) uniform image2D outputImage;

layout (local_size_x = 32, local_size_y = 32) in;

void main()
{
	uvec2 pos = gl_GlobalInvocationID.xy;
    if(pos.x>=PushConstants.imageSize.x || pos.y>=PushConstants.imageSize.y) return;

	// Sampler is set up to do min reduction, so this computes the minimum depth of a 2x2 texel quad
	vec4 depth = texture(inputImage, (vec2(pos) + vec2(0.5)) / PushConstants.imageSize);

	imageStore(outputImage, ivec2(pos), depth);
}
