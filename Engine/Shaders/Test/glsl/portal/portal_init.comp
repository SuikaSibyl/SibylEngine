 #version 450

layout(push_constant) uniform constants {
    uint particleCount;
} PushConstants;

struct Particle
{
    vec4 pos;
    vec4 vel;
    vec4 color;
};

layout(set = 0, binding = 0, std430) buffer Particles
{
    Particle particle[];
} particles;

struct Counter
{
    uint aliveCount;
    uint deadCount;
    uint emitCount;
    uint drawCount;
    uint maxCount;
};
layout(set = 0, binding = 1, std430) buffer Counters
{
    Counter counter[];
} counter;

layout(set = 0, binding = 2, std430) buffer LiveIndexBuffer
{
    uint[] indices;
} livePool;

layout(set = 0, binding = 3, std430) buffer DeadIndexBuffer
{
    uint[] indices;
} deadPool;

struct DrawIndexedIndirect
{
    uint indexCount;
    uint instanceCount;
    uint firstIndex;
    int  vertexOffset;
    uint firstInstance;
};

layout(set = 0, binding = 4, std430) buffer IndirectDrawBuffer
{
    DrawIndexedIndirect[] content;
} IndirectBuffer;

layout (local_size_x = 512) in;

void main()
{
    uint idx = gl_GlobalInvocationID.x;
    if(idx >= PushConstants.particleCount) return;
    
    deadPool.indices[idx] = PushConstants.particleCount - idx - 1;

    if(idx == 0)
    {
        counter.counter[0].deadCount = PushConstants.particleCount;
        counter.counter[0].aliveCount = 0;
        counter.counter[0].maxCount = PushConstants.particleCount;
        
        DrawIndexedIndirect indirectBuffer;
        indirectBuffer.indexCount = 6;
        indirectBuffer.instanceCount = 0;
        indirectBuffer.firstIndex = 0;
        indirectBuffer.vertexOffset = 0;
        indirectBuffer.firstInstance = 0;
        IndirectBuffer.content[0] = indirectBuffer;
    }
}
